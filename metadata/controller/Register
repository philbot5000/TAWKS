{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Register"
    },
    "designerId": "3156dc36-5b0c-488f-918a-40661516d225",
    "cn": [
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "url": "register",
                "fn": "showRegister",
                "implHandler": [
                    "var main = Ext.getCmp('main'),",
                    "    register = Ext.create('Tawks.view.Register');",
                    "",
                    "main.setActiveItem(register);"
                ]
            },
            "designerId": "7be34424-c840-4d50-9c3f-a9d8d16e27bb"
        },
        {
            "type": "Ext.app.Route",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "url": "register/edit",
                "fn": "showRegisterEdit",
                "implHandler": [
                    "var main = Ext.getCmp('main'),",
                    "    register = Ext.create('Tawks.view.Register', {edit: true});",
                    "",
                    "main.setActiveItem(register);"
                ]
            },
            "designerId": "098ed5b5-cbd5-4755-ae71-7bed8b4f2359"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "convertDate",
                "designer|params": [
                    "v"
                ],
                "implHandler": [
                    "if(v === null) {",
                    "    return null;",
                    "} else {",
                    "    return new Date(parseInt(v.substr(6), 10));",
                    "    //return new Date(isoString.replace(/-/g,'/').replace(/T/,' ').replace(/\\+/,' +'));",
                    "}"
                ]
            },
            "designerId": "88a06d38-be91-4086-875e-dfdda7afad92"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showPicker",
                "designer|params": [
                    "textfield"
                ],
                "implHandler": [
                    "//var timePicker = Ext.ComponentQuery.query('#timePicker')[0] || Ext.create('Tawks.view.TimePicker');",
                    "",
                    "//timePicker.show();",
                    "//timePicker.form = textfield;"
                ]
            },
            "designerId": "6b51182d-6207-4f00-8780-02d580affe55"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRegisterTap",
                "implHandler": [
                    "var main = Ext.getCmp('main'),",
                    "    me = this,",
                    "    register = main.getComponent('register');",
                    "",
                    "register.setMasked({xtype: 'loadmask', message: 'Loading...'});",
                    "",
                    "",
                    "var params = {};",
                    "",
                    "var registerVals = register.getValues();",
                    "",
                    "registerVals.mondayStartTime = this.convertToISO(register.getValues().mondayStartTime);",
                    "registerVals.mondayEndTime = this.convertToISO(register.getValues().mondayEndTime);",
                    "registerVals.tuesdayStartTime = this.convertToISO(register.getValues().tuesdayStartTime);",
                    "registerVals.tuesdayEndTime = this.convertToISO(register.getValues().tuesdayEndTime);",
                    "registerVals.wednesdayStartTime = this.convertToISO(register.getValues().wednesdayStartTime);",
                    "registerVals.wednesdayEndTime = this.convertToISO(register.getValues().wednesdayEndTime);",
                    "registerVals.thursdayStartTime = this.convertToISO(register.getValues().thursdayStartTime);",
                    "registerVals.thursdayEndTime = this.convertToISO(register.getValues().thursdayEndTime);",
                    "registerVals.fridayStartTime = this.convertToISO(register.getValues().fridayStartTime);",
                    "registerVals.fridayEndTime = this.convertToISO(register.getValues().fridayEndTime);",
                    "registerVals.saturdayStartTime = this.convertToISO(register.getValues().saturdayStartTime);",
                    "registerVals.saturdayEndTime = this.convertToISO(register.getValues().saturdayEndTime);",
                    "registerVals.sundayStartTime = this.convertToISO(register.getValues().sundayStartTime);",
                    "registerVals.sundayEndTime = this.convertToISO(register.getValues().sundayEndTime);",
                    "registerVals.endDayQuestionTime = this.convertToISO(register.getValues().endDayQuestionTime);",
                    "",
                    "    ",
                    "if(this.checkValid(registerVals)) {",
                    "    Ext.Ajax.request({",
                    "        url: 'https://dev-web.boisestate.edu/tawks/account/register',",
                    "        method: 'POST',",
                    "        headers: {",
                    "            \"Content-Type\": \"application/json\"",
                    "        },",
                    "        params: Ext.encode(registerVals),",
                    "        success: function(response){",
                    "            var text = Ext.decode(response.responseText);",
                    "            ",
                    "            ",
                    "            console.log(text);",
                    "            register.setMasked(false);",
                    "            if(button.getText() === 'Update') {",
                    "                me.redirectTo('update');",
                    "            } else {",
                    "                me.redirectTo('pending');",
                    "            }",
                    "        },",
                    "        failure: function(response) {",
                    "            console.log(response);",
                    "        }",
                    "    });",
                    "    ",
                    "} else {",
                    "    var description = Ext.Msg.alert('Uh Oh', 'Gender, rank, paid responsibility, carrier, phone, and end of day question time are all required fields.', ",
                    "\t\tfunction(btn, something) {",
                    "\t\t\tregister.setMasked(false);",
                    "        });",
                    "}"
                ],
                "name": "tap",
                "designer|targetType": "Ext.Button",
                "designer|controlQuery": "button#registerButton"
            },
            "designerId": "57256d24-1621-455e-a696-c564a7dc0710"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRegisterInitialize",
                "implHandler": [
                    "var me = this;",
                    "",
                    "if(component.config.edit) {",
                    "",
                    "    Ext.ComponentQuery.query('#registerButton')[0].setText('Update');",
                    "",
                    "    component.setMasked({xtype: 'loadmask', message: 'Loading...'});",
                    "",
                    "    Ext.Ajax.request({",
                    "        url: 'https://dev-web.boisestate.edu/tawks/account/getsettings',",
                    "        method: 'GET',",
                    "        success: function(response){",
                    "",
                    "            component.setMasked(false);",
                    "",
                    "            var values = Ext.decode(response.responseText);",
                    "",
                    "            values.mondayStartTime = me.convertDate(values.mondayStartTime);",
                    "            values.mondayEndTime = me.convertDate(values.mondayEndTime);",
                    "            values.tuesdayStartTime = me.convertDate(values.tuesdayStartTime);",
                    "            values.tuesdayEndTime = me.convertDate(values.tuesdayEndTime);",
                    "            values.wednesdayStartTime = me.convertDate(values.wednesdayStartTime);",
                    "            values.wednesdayEndTime = me.convertDate(values.wednesdayEndTime);",
                    "            values.thursdayStartTime = me.convertDate(values.thursdayStartTime);",
                    "            values.thursdayEndTime = me.convertDate(values.thursdayEndTime);",
                    "            values.fridayStartTime = me.convertDate(values.fridayStartTime);",
                    "            values.fridayEndTime = me.convertDate(values.fridayEndTime);",
                    "            values.saturdayStartTime = me.convertDate(values.saturdayStartTime);",
                    "            values.saturdayEndTime = me.convertDate(values.saturdayEndTime);",
                    "            values.sundayStartTime = me.convertDate(values.sundayStartTime);",
                    "            values.sundayEndTime = me.convertDate(values.sundayEndTime);",
                    "            values.endDayQuestionTime = me.convertDate(values.endDayQuestionTime);",
                    "",
                    "            component.setValues(values);",
                    "            ",
                    "            Ext.ComponentQuery.query('#quit')[0].show();",
                    "        },",
                    "        failure: function(response) {",
                    "            console.log(response);",
                    "        }    ",
                    "    });",
                    "",
                    "}"
                ],
                "name": "initialize",
                "designer|targetType": "Ext.form.Panel",
                "designer|controlQuery": "formpanel#register"
            },
            "designerId": "46724162-6fc2-45fd-b015-1b9dbd8117ca"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "checkValid",
                "designer|params": [
                    "params"
                ],
                "implHandler": [
                    "",
                    "if(typeof params.paidResponsibility === 'undefined') {",
                    "    params.paidResponsibility = null;",
                    "}",
                    "",
                    "console.log(params);",
                    "",
                    "",
                    "if(params.Email !== null && params.gender !== null && params.rank !== null && params.paidResponsibility !== null && params.carrier !== null && params.phone !== '' && params.endDayQuestionTime !== null) {",
                    "    return true;",
                    "} else {",
                    "    return false;",
                    "}"
                ]
            },
            "designerId": "461d60d6-afbf-422e-aea9-515be99b2655"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "convertToISO",
                "designer|params": [
                    "val"
                ],
                "implHandler": [
                    "if(val !== null) {",
                    "    return val.toISOString();",
                    "} else {",
                    "    return '';",
                    "}"
                ]
            },
            "designerId": "27ec62b8-7529-43ba-8117-0a3f79e8ea7a"
        }
    ]
}