/*
 * File: app/view/TimePicker.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Tawks.view.TimePicker', {
    extend: 'Ext.picker.Picker',
    alias: 'widget.timepicker',

    requires: [
        'Ext.DateExtras'
    ],

    config: {
        hidden: true,
        itemId: 'timePicker',
        hideOnMaskTap: true,
        value: '12:00 AM',
        doneButton: {
            itemId: 'done'
        },
        cancelButton: {
            itemId: 'cancelButton'
        },
        slots: [
            {
                xtype: 'pickerslot',
                data: [
                    {
                        text: '12',
                        value: 0
                    },
                    {
                        text: '01',
                        value: 1
                    },
                    {
                        text: '02',
                        value: 2
                    },
                    {
                        text: '03',
                        value: 3
                    },
                    {
                        text: '04',
                        value: 4
                    },
                    {
                        text: '05',
                        value: 5
                    },
                    {
                        text: '06',
                        value: 6
                    },
                    {
                        text: '07',
                        value: 7
                    },
                    {
                        text: '08',
                        value: 8
                    },
                    {
                        text: '09',
                        value: 9
                    },
                    {
                        text: '10',
                        value: 10
                    },
                    {
                        text: '11',
                        value: 11
                    }
                ],
                itemId: 'hourPickerSlot',
                align: 'right',
                name: 'hour',
                title: 'hh'
            },
            {
                xtype: 'pickerslot',
                data: [
                    {
                        text: '00',
                        value: 00
                    },
                    {
                        text: '05',
                        value: 05
                    },
                    {
                        text: '10',
                        value: 10
                    },
                    {
                        text: '15',
                        value: 15
                    },
                    {
                        text: '20',
                        value: 20
                    },
                    {
                        text: '25',
                        value: 25
                    },
                    {
                        text: '30',
                        value: 30
                    },
                    {
                        text: '35',
                        value: 35
                    },
                    {
                        text: '40',
                        value: 40
                    },
                    {
                        text: '45',
                        value: 45
                    },
                    {
                        text: '50',
                        value: 50
                    },
                    {
                        text: '55',
                        value: 55
                    }
                ],
                itemId: 'minutePickerSlot',
                align: 'center',
                name: 'minute',
                title: 'mm'
            },
            {
                xtype: 'pickerslot',
                data: [
                    {
                        text: 'AM',
                        value: 0
                    },
                    {
                        text: 'PM',
                        value: 1
                    }
                ],
                itemId: 'ampmPickerSlot',
                name: 'ampm',
                title: 'ampm'
            }
        ],
        listeners: [
            {
                fn: 'onDoneTap',
                event: 'tap',
                delegate: '#done'
            },
            {
                fn: 'onMybutton10Tap',
                event: 'tap',
                delegate: '#cancelButton'
            },
            {
                fn: 'onTimePickerPick',
                event: 'pick'
            },
            {
                fn: 'onTimePickerShow',
                event: 'show'
            }
        ]
    },

    onDoneTap: function(button, e, eOpts) {
        var picker = Ext.ComponentQuery.query('#timePicker')[0],
            form = picker.form,
            date = new Date(),
            value = picker.getValue();

        if(value.ampm === 0) {
            // AM

            var hr = value.hour,
                min = (value.minute < 10) ? '0'+value.minute : value.minute; 

                form.setValue(hr+':'+min+' AM');

            date.setHours(value.hour);
            date.setMinutes(value.minute);

            var display = Ext.Date.format(date, 'h:m A');
            form.setValueField(date);
        }

        if(value.ampm === 1) {

            var hrs = value.hour + 12,
                mins = (value.minute < 10) ? '0'+value.minute : value.minute; 

                form.setValue(hrs+':'+mins+' PM');
            date.setHours(hrs);
            date.setMinutes(value.minute);

        }

        console.log(date);
    },

    onMybutton10Tap: function(button, e, eOpts) {

    },

    onTimePickerPick: function(picker, value, slot, eOpts) {

    },

    onTimePickerShow: function(component, eOpts) {
        console.log(component);
    }

});